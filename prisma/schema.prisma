// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String                   @id @default(uuid())
  email                  String                   @unique
  password               String
  verified               Boolean                  @default(false)
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  isAdmin                Boolean                  @default(false)
  name                   String                   @default("User")
  emailVerificationToken EmailVerificationToken[]

  movies Movie[]
}

model EmailVerificationToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  expiresAt Int
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Movie {
  id            String   @id @default(uuid())
  friendlyTitle String
  fullTitle     String
  sinopsys      String
  releaseDate   DateTime
  durationTime  Int
  status        String
  language      String
  budget        Int
  revenue       Int
  profit        Int
  tags          String[]
  rating        Int
  trailer       String
  image         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  authorId                 String
  author                   User    @relation(fields: [authorId], references: [id])
  emailVerificationTokenId String?
}
